// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Transenvios.Shipping.Api.Infraestructure;

#nullable disable

namespace Transenvios.Shipping.Api.Migrations.MySqlMigrations
{
    [DbContext(typeof(MySqlDataContext))]
    partial class MySqlDataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Transenvios.Shipping.Api.Domains.CatalogService.City", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<ulong>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(5)
                        .HasColumnType("varchar(5)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("Code")
                        .IsUnique();

                    b.HasIndex("Id")
                        .IsUnique();

                    b.ToTable("Cities", (string)null);
                });

            modelBuilder.Entity("Transenvios.Shipping.Api.Domains.CatalogService.ShipmentRoute", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<ulong>("Active")
                        .HasColumnType("bit");

                    b.Property<decimal?>("AdditionalKiloPrice")
                        .HasColumnType("decimal(16,2)");

                    b.Property<string>("FromCityCode")
                        .IsRequired()
                        .HasColumnType("varchar(5)");

                    b.Property<decimal?>("InitialKiloPrice")
                        .HasColumnType("decimal(16,2)");

                    b.Property<decimal?>("PriceCm3")
                        .HasColumnType("decimal(16,2)");

                    b.Property<string>("ToCityCode")
                        .IsRequired()
                        .HasColumnType("varchar(5)");

                    b.HasKey("Id");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.HasIndex("FromCityCode", "ToCityCode")
                        .IsUnique();

                    b.ToTable("Routes", (string)null);
                });

            modelBuilder.Entity("Transenvios.Shipping.Api.Domains.ClientService.Client", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<ulong>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("CountryCode")
                        .HasColumnType("varchar(5)");

                    b.Property<string>("DocumentId")
                        .IsUnicode(true)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("DocumentType")
                        .HasMaxLength(5)
                        .HasColumnType("varchar(5)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("varchar(500)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("varchar(200)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("varchar(200)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("varchar(2000)");

                    b.Property<string>("Phone")
                        .HasColumnType("varchar(10)");

                    b.Property<sbyte?>("Role")
                        .HasMaxLength(2)
                        .HasColumnType("tinyint");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("Id")
                        .IsUnique();

                    b.ToTable("Clients", (string)null);
                });

            modelBuilder.Entity("Transenvios.Shipping.Api.Domains.DriverService.Driver", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<ulong>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("CountryCode")
                        .HasColumnType("varchar(5)");

                    b.Property<string>("DocumentId")
                        .IsUnicode(true)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("DocumentType")
                        .HasMaxLength(5)
                        .HasColumnType("varchar(5)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("varchar(500)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("varchar(200)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Phone")
                        .HasColumnType("varchar(10)");

                    b.Property<string>("PickUpAddress")
                        .IsRequired()
                        .HasColumnType("varchar(200)");

                    b.Property<Guid>("PickUpCityId")
                        .HasMaxLength(36)
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.HasIndex("PickUpCityId");

                    b.ToTable("Drivers", (string)null);
                });

            modelBuilder.Entity("Transenvios.Shipping.Api.Domains.ShipmentOrderService.Entities.ShipmentOrder", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<DateTime>("ApplicationDate")
                        .HasColumnType("datetime");

                    b.Property<Guid>("CustomerId")
                        .HasColumnType("char(36)");

                    b.Property<string>("DropOffAddress")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<Guid?>("DropOffCityId")
                        .IsRequired()
                        .HasMaxLength(36)
                        .HasColumnType("char(36)");

                    b.Property<decimal?>("InitialPrice")
                        .HasColumnType("decimal(16,2)");

                    b.Property<DateTime?>("ModifyDate")
                        .HasColumnType("datetime");

                    b.Property<Guid?>("ModifyUserId")
                        .HasColumnType("char(36)");

                    b.Property<sbyte>("PaymentState")
                        .HasColumnType("tinyint");

                    b.Property<string>("PickUpAddress")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<Guid?>("PickUpCityId")
                        .IsRequired()
                        .HasMaxLength(36)
                        .HasColumnType("char(36)");

                    b.Property<string>("RecipientCountryCode")
                        .HasColumnType("varchar(5)");

                    b.Property<string>("RecipientDocumentId")
                        .HasColumnType("varchar(20)");

                    b.Property<string>("RecipientDocumentType")
                        .HasColumnType("varchar(5)");

                    b.Property<string>("RecipientEmail")
                        .HasColumnType("varchar(500)");

                    b.Property<string>("RecipientFirstName")
                        .HasColumnType("varchar(200)");

                    b.Property<string>("RecipientLastName")
                        .HasColumnType("varchar(200)");

                    b.Property<string>("RecipientPhone")
                        .HasColumnType("varchar(10)");

                    b.Property<string>("SenderCountryCode")
                        .HasColumnType("varchar(5)");

                    b.Property<string>("SenderDocumentId")
                        .HasColumnType("varchar(20)");

                    b.Property<string>("SenderDocumentType")
                        .HasColumnType("varchar(5)");

                    b.Property<string>("SenderEmail")
                        .HasColumnType("varchar(500)");

                    b.Property<string>("SenderFirstName")
                        .HasColumnType("varchar(200)");

                    b.Property<string>("SenderLastName")
                        .HasColumnType("varchar(200)");

                    b.Property<string>("SenderPhone")
                        .HasColumnType("varchar(10)");

                    b.Property<sbyte>("ShipmentState")
                        .HasColumnType("tinyint");

                    b.Property<decimal>("Taxes")
                        .HasColumnType("decimal(16,2)");

                    b.Property<decimal>("TotalPrice")
                        .HasColumnType("decimal(16,2)");

                    b.Property<Guid?>("TransporterId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.HasIndex("DropOffCityId");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.HasIndex("ModifyUserId");

                    b.HasIndex("PickUpCityId");

                    b.HasIndex("TransporterId");

                    b.ToTable("ShipmentOrders", (string)null);
                });

            modelBuilder.Entity("Transenvios.Shipping.Api.Domains.ShipmentOrderService.Entities.ShipmentOrderItem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<decimal?>("Height")
                        .IsRequired()
                        .HasColumnType("decimal(16,2)");

                    b.Property<decimal?>("InsuredAmount")
                        .HasColumnType("decimal(16,2)");

                    b.Property<ulong>("IsFragile")
                        .HasColumnType("bit");

                    b.Property<ulong>("IsUrgent")
                        .HasColumnType("bit");

                    b.Property<decimal?>("Length")
                        .IsRequired()
                        .HasColumnType("decimal(16,2)");

                    b.Property<long>("OrderId")
                        .HasColumnType("bigint");

                    b.Property<decimal?>("Weight")
                        .IsRequired()
                        .HasColumnType("decimal(16,2)");

                    b.Property<decimal?>("Width")
                        .IsRequired()
                        .HasColumnType("decimal(16,2)");

                    b.HasKey("Id");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.HasIndex("OrderId");

                    b.ToTable("ShipmentOrderItems", (string)null);
                });

            modelBuilder.Entity("Transenvios.Shipping.Api.Domains.UserService.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<ulong>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("CountryCode")
                        .HasColumnType("varchar(5)");

                    b.Property<string>("DocumentId")
                        .IsUnicode(true)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("DocumentType")
                        .HasMaxLength(5)
                        .HasColumnType("varchar(5)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("varchar(500)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("varchar(200)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("varchar(200)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("varchar(2000)");

                    b.Property<string>("Phone")
                        .HasColumnType("varchar(10)");

                    b.Property<sbyte?>("Role")
                        .HasColumnType("tinyint");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("Id")
                        .IsUnique();

                    b.ToTable("Users", (string)null);
                });

            modelBuilder.Entity("Transenvios.Shipping.Api.Domains.DriverService.Driver", b =>
                {
                    b.HasOne("Transenvios.Shipping.Api.Domains.CatalogService.City", "PickUpCity")
                        .WithMany("Drivers")
                        .HasForeignKey("PickUpCityId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("Drivers_PickUpCityId_FK");

                    b.Navigation("PickUpCity");
                });

            modelBuilder.Entity("Transenvios.Shipping.Api.Domains.ShipmentOrderService.Entities.ShipmentOrder", b =>
                {
                    b.HasOne("Transenvios.Shipping.Api.Domains.ClientService.Client", "Customer")
                        .WithMany("Shipments")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("ShipmentOrders_CustomerId_FK");

                    b.HasOne("Transenvios.Shipping.Api.Domains.CatalogService.City", "DropOffCity")
                        .WithMany("DropOffCities")
                        .HasForeignKey("DropOffCityId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("ShipmentOrders_DropOffCityId_FK");

                    b.HasOne("Transenvios.Shipping.Api.Domains.UserService.User", "ModifyUser")
                        .WithMany("Shipments")
                        .HasForeignKey("ModifyUserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .HasConstraintName("ShipmentOrders_ModifyUserId_FK");

                    b.HasOne("Transenvios.Shipping.Api.Domains.CatalogService.City", "PickUpCity")
                        .WithMany("PickUpCities")
                        .HasForeignKey("PickUpCityId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("ShipmentOrders_PickupCityId_FK");

                    b.HasOne("Transenvios.Shipping.Api.Domains.DriverService.Driver", "Transporter")
                        .WithMany("Shipments")
                        .HasForeignKey("TransporterId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .HasConstraintName("ShipmentOrders_TransporterId_FK");

                    b.Navigation("Customer");

                    b.Navigation("DropOffCity");

                    b.Navigation("ModifyUser");

                    b.Navigation("PickUpCity");

                    b.Navigation("Transporter");
                });

            modelBuilder.Entity("Transenvios.Shipping.Api.Domains.ShipmentOrderService.Entities.ShipmentOrderItem", b =>
                {
                    b.HasOne("Transenvios.Shipping.Api.Domains.ShipmentOrderService.Entities.ShipmentOrder", "Order")
                        .WithMany("Packages")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("ShipmentOrderItems_ShipmentOrder_FK");

                    b.Navigation("Order");
                });

            modelBuilder.Entity("Transenvios.Shipping.Api.Domains.CatalogService.City", b =>
                {
                    b.Navigation("Drivers");

                    b.Navigation("DropOffCities");

                    b.Navigation("PickUpCities");
                });

            modelBuilder.Entity("Transenvios.Shipping.Api.Domains.ClientService.Client", b =>
                {
                    b.Navigation("Shipments");
                });

            modelBuilder.Entity("Transenvios.Shipping.Api.Domains.DriverService.Driver", b =>
                {
                    b.Navigation("Shipments");
                });

            modelBuilder.Entity("Transenvios.Shipping.Api.Domains.ShipmentOrderService.Entities.ShipmentOrder", b =>
                {
                    b.Navigation("Packages");
                });

            modelBuilder.Entity("Transenvios.Shipping.Api.Domains.UserService.User", b =>
                {
                    b.Navigation("Shipments");
                });
#pragma warning restore 612, 618
        }
    }
}
